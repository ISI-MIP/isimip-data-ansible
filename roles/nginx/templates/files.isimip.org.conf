server {
    server_name {{ files_url }};

    access_log /var/log/nginx/{{ files_url }}.access.log;
    error_log /var/log/nginx/{{ files_url }}.error.log;

    root /data/public/;
    index index.html;

    location / {
        try_files $uri $uri/ =404;

        autoindex on;

        include /etc/nginx/limit.conf;
        include /etc/nginx/cors.conf;
    }
    location /dev {
        try_files $uri $uri/ =404;
        alias /data/dev/public/;
        autoindex on;

        include /etc/nginx/cors.conf;
    }
    location /api/output {
        try_files $uri $uri/ =404;
        alias /data/api/public;
        include /etc/nginx/cors.conf;
    }
    location /api/v1 {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_pass http://127.0.0.1:9002/;

        include /etc/nginx/cors.conf;
    }
    location /cama-flood {
        try_files $uri $uri/ =404;
        alias /data/cama-flood/;
        autoindex on;
    }

    error_page 502 /502.html;
    location = /502.html {
        root /srv/www/htdocs/;
        internal;
    }

    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/{{ files_url }}/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/{{ files_url }}/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}
server {
    if ($host = {{ files_url }}) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    server_name {{ files_url }};

    listen 80 default_server;
    listen [::]:80 default_server;
    return 404; # managed by Certbot
}
